# ## uiControl * uiAllocControl(int n, uint32_t OSsig, uint32_t typesig, const char * typenamestr)
# # Param: OSsig (uint32_t)
# CTypes.set_fn_param_type('uiAllocControl', 'OSsig', CTypes['???'])
# # Param: typesig (uint32_t)
# CTypes.set_fn_param_type('uiAllocControl', 'typesig', CTypes['???'])

# ## void uiAreaBeginUserWindowResize(uiArea * a, uiWindowResizeEdge edge)
# # Param: edge (uiWindowResizeEdge)
# CTypes.set_fn_param_type('uiAreaBeginUserWindowResize', 'edge', CTypes['???'])

# ## void uiButtonOnClicked(uiButton * b, void (*)(uiButton *, void *) f, void * data)
# # Param: f (void (*)(uiButton *, void *))
# CTypes.set_fn_param_type('uiButtonOnClicked', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiButtonOnClicked', 'data', CTypes['???'])

# ## char * uiButtonText(uiButton * b)
# # Return value (char *)
# CTypes.set_fn_return_type('uiButtonText', CTypes['???'])

# ## void uiCheckboxOnToggled(uiCheckbox * c, void (*)(uiCheckbox *, void *) f, void * data)
# # Param: f (void (*)(uiCheckbox *, void *))
# CTypes.set_fn_param_type('uiCheckboxOnToggled', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiCheckboxOnToggled', 'data', CTypes['???'])

# ## char * uiCheckboxText(uiCheckbox * c)
# # Return value (char *)
# CTypes.set_fn_return_type('uiCheckboxText', CTypes['???'])

# ## void uiColorButtonColor(uiColorButton * b, double * r, double * g, double * bl, double * a)
# # Param: r (double *)
# CTypes.set_fn_param_type('uiColorButtonColor', 'r', CTypes['???'])
# # Param: g (double *)
# CTypes.set_fn_param_type('uiColorButtonColor', 'g', CTypes['???'])
# # Param: bl (double *)
# CTypes.set_fn_param_type('uiColorButtonColor', 'bl', CTypes['???'])
# # Param: a (double *)
# CTypes.set_fn_param_type('uiColorButtonColor', 'a', CTypes['???'])

# ## void uiColorButtonOnChanged(uiColorButton * b, void (*)(uiColorButton *, void *) f, void * data)
# # Param: f (void (*)(uiColorButton *, void *))
# CTypes.set_fn_param_type('uiColorButtonOnChanged', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiColorButtonOnChanged', 'data', CTypes['???'])

# ## void uiComboboxOnSelected(uiCombobox * c, void (*)(uiCombobox *, void *) f, void * data)
# # Param: f (void (*)(uiCombobox *, void *))
# CTypes.set_fn_param_type('uiComboboxOnSelected', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiComboboxOnSelected', 'data', CTypes['???'])

# ## uintptr_t uiControlHandle(uiControl * arg1)
# # Return value (uintptr_t)
# CTypes.set_fn_return_type('uiControlHandle', CTypes['???'])

# ## char * uiDrawFontFamiliesFamily(uiDrawFontFamilies * ff, int n)
# # Return value (char *)
# CTypes.set_fn_return_type('uiDrawFontFamiliesFamily', CTypes['???'])

# ## void uiDrawMatrixTransformPoint(uiDrawMatrix * m, double * x, double * y)
# # Param: x (double *)
# CTypes.set_fn_param_type('uiDrawMatrixTransformPoint', 'x', CTypes['???'])
# # Param: y (double *)
# CTypes.set_fn_param_type('uiDrawMatrixTransformPoint', 'y', CTypes['???'])

# ## void uiDrawMatrixTransformSize(uiDrawMatrix * m, double * x, double * y)
# # Param: x (double *)
# CTypes.set_fn_param_type('uiDrawMatrixTransformSize', 'x', CTypes['???'])
# # Param: y (double *)
# CTypes.set_fn_param_type('uiDrawMatrixTransformSize', 'y', CTypes['???'])

# ## uiDrawPath * uiDrawNewPath(uiDrawFillMode fillMode)
# # Param: fillMode (uiDrawFillMode)
# CTypes.set_fn_param_type('uiDrawNewPath', 'fillMode', CTypes['???'])

# ## uintptr_t uiDrawTextFontHandle(uiDrawTextFont * font)
# # Return value (uintptr_t)
# CTypes.set_fn_return_type('uiDrawTextFontHandle', CTypes['???'])

# ## void uiDrawTextLayoutExtents(uiDrawTextLayout * layout, double * width, double * height)
# # Param: width (double *)
# CTypes.set_fn_param_type('uiDrawTextLayoutExtents', 'width', CTypes['???'])
# # Param: height (double *)
# CTypes.set_fn_param_type('uiDrawTextLayoutExtents', 'height', CTypes['???'])

# ## void uiEditableComboboxOnChanged(uiEditableCombobox * c, void (*)(uiEditableCombobox *, void *) f, void * data)
# # Param: f (void (*)(uiEditableCombobox *, void *))
# CTypes.set_fn_param_type('uiEditableComboboxOnChanged', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiEditableComboboxOnChanged', 'data', CTypes['???'])

# ## char * uiEditableComboboxText(uiEditableCombobox * c)
# # Return value (char *)
# CTypes.set_fn_return_type('uiEditableComboboxText', CTypes['???'])

# ## void uiEntryOnChanged(uiEntry * e, void (*)(uiEntry *, void *) f, void * data)
# # Param: f (void (*)(uiEntry *, void *))
# CTypes.set_fn_param_type('uiEntryOnChanged', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiEntryOnChanged', 'data', CTypes['???'])

# ## char * uiEntryText(uiEntry * e)
# # Return value (char *)
# CTypes.set_fn_return_type('uiEntryText', CTypes['???'])

# ## void uiFontButtonOnChanged(uiFontButton * b, void (*)(uiFontButton *, void *) f, void * data)
# # Param: f (void (*)(uiFontButton *, void *))
# CTypes.set_fn_param_type('uiFontButtonOnChanged', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiFontButtonOnChanged', 'data', CTypes['???'])

# ## void uiFreeText(char * text)
# # Param: text (char *)
# CTypes.set_fn_param_type('uiFreeText', 'text', CTypes['???'])

# ## void uiGridAppend(uiGrid * g, uiControl * c, int left, int top, int xspan, int yspan, int hexpand, uiAlign halign, int vexpand, uiAlign valign)
# # Param: halign (uiAlign)
# CTypes.set_fn_param_type('uiGridAppend', 'halign', CTypes['???'])
# # Param: valign (uiAlign)
# CTypes.set_fn_param_type('uiGridAppend', 'valign', CTypes['???'])

# ## void uiGridInsertAt(uiGrid * g, uiControl * c, uiControl * existing, uiAt at, int xspan, int yspan, int hexpand, uiAlign halign, int vexpand, uiAlign valign)
# # Param: at (uiAt)
# CTypes.set_fn_param_type('uiGridInsertAt', 'at', CTypes['???'])
# # Param: halign (uiAlign)
# CTypes.set_fn_param_type('uiGridInsertAt', 'halign', CTypes['???'])
# # Param: valign (uiAlign)
# CTypes.set_fn_param_type('uiGridInsertAt', 'valign', CTypes['???'])

# ## char * uiGroupTitle(uiGroup * g)
# # Return value (char *)
# CTypes.set_fn_return_type('uiGroupTitle', CTypes['???'])

# ## char * uiLabelText(uiLabel * l)
# # Return value (char *)
# CTypes.set_fn_return_type('uiLabelText', CTypes['???'])

# ## void uiMenuItemOnClicked(uiMenuItem * m, void (*)(uiMenuItem *, uiWindow *, void *) f, void * data)
# # Param: f (void (*)(uiMenuItem *, uiWindow *, void *))
# CTypes.set_fn_param_type('uiMenuItemOnClicked', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiMenuItemOnClicked', 'data', CTypes['???'])

# ## void uiMultilineEntryOnChanged(uiMultilineEntry * e, void (*)(uiMultilineEntry *, void *) f, void * data)
# # Param: f (void (*)(uiMultilineEntry *, void *))
# CTypes.set_fn_param_type('uiMultilineEntryOnChanged', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiMultilineEntryOnChanged', 'data', CTypes['???'])

# ## char * uiMultilineEntryText(uiMultilineEntry * e)
# # Return value (char *)
# CTypes.set_fn_return_type('uiMultilineEntryText', CTypes['???'])

# ## void uiOnShouldQuit(int (*)(void *) f, void * data)
# # Param: f (int (*)(void *))
# CTypes.set_fn_param_type('uiOnShouldQuit', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiOnShouldQuit', 'data', CTypes['???'])

# ## char * uiOpenFile(uiWindow * parent)
# # Return value (char *)
# CTypes.set_fn_return_type('uiOpenFile', CTypes['???'])

# ## void uiQueueMain(void (*)(void *) f, void * data)
# # Param: f (void (*)(void *))
# CTypes.set_fn_param_type('uiQueueMain', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiQueueMain', 'data', CTypes['???'])

# ## void uiRadioButtonsOnSelected(uiRadioButtons * r, void (*)(uiRadioButtons *, void *) f, void * data)
# # Param: f (void (*)(uiRadioButtons *, void *))
# CTypes.set_fn_param_type('uiRadioButtonsOnSelected', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiRadioButtonsOnSelected', 'data', CTypes['???'])

# ## char * uiSaveFile(uiWindow * parent)
# # Return value (char *)
# CTypes.set_fn_return_type('uiSaveFile', CTypes['???'])

# ## void uiSliderOnChanged(uiSlider * s, void (*)(uiSlider *, void *) f, void * data)
# # Param: f (void (*)(uiSlider *, void *))
# CTypes.set_fn_param_type('uiSliderOnChanged', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiSliderOnChanged', 'data', CTypes['???'])

# ## void uiSpinboxOnChanged(uiSpinbox * s, void (*)(uiSpinbox *, void *) f, void * data)
# # Param: f (void (*)(uiSpinbox *, void *))
# CTypes.set_fn_param_type('uiSpinboxOnChanged', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiSpinboxOnChanged', 'data', CTypes['???'])

# ## void uiWindowContentSize(uiWindow * w, int * width, int * height)
# # Param: width (int *)
# CTypes.set_fn_param_type('uiWindowContentSize', 'width', CTypes['???'])
# # Param: height (int *)
# CTypes.set_fn_param_type('uiWindowContentSize', 'height', CTypes['???'])

# ## void uiWindowOnClosing(uiWindow * w, int (*)(uiWindow *, void *) f, void * data)
# # Param: f (int (*)(uiWindow *, void *))
# CTypes.set_fn_param_type('uiWindowOnClosing', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiWindowOnClosing', 'data', CTypes['???'])

# ## void uiWindowOnContentSizeChanged(uiWindow * w, void (*)(uiWindow *, void *) f, void * data)
# # Param: f (void (*)(uiWindow *, void *))
# CTypes.set_fn_param_type('uiWindowOnContentSizeChanged', 'f', CTypes['???'])
# # Param: data (void *)
# CTypes.set_fn_param_type('uiWindowOnContentSizeChanged', 'data', CTypes['???'])

# ## char * uiWindowTitle(uiWindow * w)
# # Return value (char *)
# CTypes.set_fn_return_type('uiWindowTitle', CTypes['???'])

